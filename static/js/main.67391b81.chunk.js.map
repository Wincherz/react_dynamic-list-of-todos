{"version":3,"sources":["TodoListItem.tsx","TodosList.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoListItem","title","status","name","className","cn","completed","TodosList","list","map","item","user","key","fullTaskList","a","fetch","then","data","json","users","tasks","find","person","userId","id","App","useState","todos","setTodos","dataLoaded","setdataLoaded","loading","setLoading","button","switchButton","sortBy","action","sort","b","localeCompare","Error","type","onClick","length","ReactDOM","render","document","getElementById"],"mappings":"mRAmBeA,EAVuB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACtD,OACE,wBAAIC,UAAWC,IAAG,aAAc,CAAEC,UAAWJ,KAC3C,4BAAKD,GACL,4BAAKE,GACL,2BAAID,EAAS,YAAc,mBCPpBK,EAA6B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC3C,OACE,wBAAIJ,UAAU,QACXI,EAAKC,KAAI,SAAAC,GAAI,OACZ,kBAAC,EAAD,CACET,MAAOS,EAAKT,MACZC,OAAQQ,EAAKJ,UACbH,KAAMO,EAAKC,KAAKR,KAChBS,IAAKF,EAAKT,a,+BCFPY,EAAY,uCAAG,8BAAAC,EAAA,sEATnBC,MAJS,8CAKbC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UASoBF,MAAK,SAAAC,GAAI,OAAIA,KAD5B,cACpBE,EADoB,gBAJnBJ,MARQ,8CASZC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAKoBF,MAAK,SAAAC,GAAI,OAAIA,KAF5B,cAEpBG,EAFoB,yBAInBA,EAAMX,KAAI,SAACC,GAChB,OAAO,2BACFA,GADL,IAEEC,KAAMQ,EAAME,MAAK,SAACC,GAAD,OAAkBZ,EAAKa,SAAWD,EAAOE,YAPpC,2CAAH,qDC2FVC,G,MAlGH,WAAO,IAAD,EACUC,mBAAuB,IADjC,mBACTC,EADS,KACFC,EADE,OAEoBF,oBAAkB,GAFtC,mBAETG,EAFS,KAEGC,EAFH,OAGcJ,oBAAkB,GAHhC,mBAGTK,EAHS,KAGAC,EAHA,OAIeN,oBAAkB,GAJjC,mBAITO,EAJS,KAIDC,EAJC,KAiBVC,EAAS,SAACC,GACd,OAAQA,GACN,IAAK,QACHR,EACE,YAAID,GAAOU,MAAK,SAACvB,EAAsBwB,GAAvB,OACdxB,EAAEb,MAAMsC,cAAcD,EAAErC,WAG5B,MACF,IAAK,YACH2B,EACE,YAAID,GAAOU,MAAK,SAACvB,EAA2BwB,GAA5B,OACbA,EAAEhC,WAAaQ,EAAER,cAGtB,MACF,IAAK,OACHsB,EACE,YAAID,GAAOU,MAAK,SAACvB,EAA8BwB,GAA/B,OACbxB,EAAEH,KAAKR,KAAKoC,cAAcD,EAAE3B,KAAKR,UAGtC,MACF,QACE,MAAM,IAAIqC,MAAM,iFAItB,OACE,oCAEIT,GACG,0CAIHE,GAEE,4BACEQ,KAAK,SACLC,QAnDU,WAClBV,GAAW,GACXE,GAAa,GACbrB,IACGG,MAAK,SAAAC,GACJa,GAAeD,GACfG,GAAW,GACXJ,EAASX,QA0CP,oBAUFY,GAEE,oCACE,4BACEY,KAAK,SACLC,QAAS,kBAAMP,EAAO,WAFxB,iBAMA,4BACEM,KAAK,SACLC,QAAS,kBAAMP,EAAO,eAFxB,kBAMA,4BACEM,KAAK,SACLC,QAAS,kBAAMP,EAAO,UAFxB,yBAWFR,EAAMgB,QACL,kBAAC,EAAD,CAAWnC,KAAMmB,OC9F5BiB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.67391b81.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  title: string;\n  status: boolean;\n  name: string;\n};\n\nconst TodoListItem: React.FC<Props> = ({ title, status, name }) => {\n  return (\n    <li className={cn('list__item', { completed: status })}>\n      <h2>{title}</h2>\n      <h3>{name}</h3>\n      <p>{status ? 'Completed' : 'Not completed'}</p>\n    </li>\n  );\n};\n\nexport default TodoListItem;\n","import React from 'react';\nimport TodoListItem from './TodoListItem';\n\ntype Props = {\n  list: FullTaskList;\n};\n\nexport const TodosList: React.FC<Props> = ({ list }) => {\n  return (\n    <ul className=\"list\">\n      {list.map(item => (\n        <TodoListItem\n          title={item.title}\n          status={item.completed}\n          name={item.user.name}\n          key={item.title}\n        />\n      ))}\n    </ul>\n  );\n};\n","const URL_USERS = 'https://jsonplaceholder.typicode.com/users';\nconst URL_TODO = 'https://jsonplaceholder.typicode.com/todos';\n\nconst getUsersFromServer = () => {\n  return fetch(URL_USERS)\n    .then(data => data.json());\n};\n\nconst getTasksFromServer = () => {\n  return fetch(URL_TODO)\n    .then(data => data.json());\n};\n\nexport const fullTaskList = async () => {\n  const users = await getUsersFromServer().then(data => data);\n  const tasks = await getTasksFromServer().then(data => data);\n\n  return tasks.map((item: TodoItem) => {\n    return {\n      ...item,\n      user: users.find((person: User) => item.userId === person.id),\n    };\n  });\n};\n","import React, { useState } from 'react';\nimport { TodosList } from './TodosList';\n\nimport { fullTaskList } from './api';\nimport './App.scss';\n\nconst App = () => {\n  const [todos, setTodos] = useState<FullTaskList>([]);\n  const [dataLoaded, setdataLoaded] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [button, switchButton] = useState<boolean>(true);\n\n  const getNewTasks = () => {\n    setLoading(true);\n    switchButton(false);\n    fullTaskList()\n      .then(data => {\n        setdataLoaded(!dataLoaded);\n        setLoading(false);\n        setTodos(data);\n      });\n  };\n\n  const sortBy = (action: string) => {\n    switch (action) {\n      case 'title':\n        setTodos(\n          [...todos].sort((a: { title: string }, b: { title: string }) => (\n            a.title.localeCompare(b.title)\n          )),\n        );\n        break;\n      case 'completed':\n        setTodos(\n          [...todos].sort((a: { completed: boolean }, b: { completed: boolean }) => (\n            +b.completed - +a.completed\n          )),\n        );\n        break;\n      case 'name':\n        setTodos(\n          [...todos].sort((a: { user: { name: string} }, b: { user: { name: string} }) => (\n            +a.user.name.localeCompare(b.user.name)\n          )),\n        );\n        break;\n      default:\n        throw new Error('Ты все поломал!');\n    }\n  };\n\n  return (\n    <>\n      {\n        loading\n        && <h1>Loading...</h1>\n      }\n\n      {\n        button\n        && (\n          <button\n            type=\"button\"\n            onClick={getNewTasks}\n          >\n            Loading todoList\n          </button>\n        )\n      }\n\n      {\n        dataLoaded\n        && (\n          <>\n            <button\n              type=\"button\"\n              onClick={() => sortBy('title')}\n            >\n              Sort by title\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => sortBy('completed')}\n            >\n              Sort by status\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => sortBy('name')}\n            >\n              Sort by users name\n            </button>\n          </>\n        )\n      }\n\n      {\n        !!todos.length\n        && <TodosList list={todos} />\n      }\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}